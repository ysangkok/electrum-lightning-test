diff --git a/chainregistry.go b/chainregistry.go
index 3f982be..04d28b7 100644
--- a/chainregistry.go
+++ b/chainregistry.go
@@ -23,6 +23,7 @@ import (
 	"github.com/roasbeef/btcrpcclient"
 	"github.com/roasbeef/btcwallet/chain"
 	"github.com/roasbeef/btcwallet/walletdb"
+	proxy "github.com/lightningnetwork/lnd/lightning-proxy"
 )
 
 // defaultBitcoinForwardingPolicy is the default forwarding policy used for
@@ -269,7 +270,8 @@ func newChainControlFromConfig(cfg *config, chanDB *channeldb.DB) (*chainControl
 	}
 
 	cc.msgSigner = wc
-	cc.signer = wc
+	prox := proxy.New()
+	cc.signer = prox
 	cc.chainIO = wc
 
 	// Create, and start the lnwallet, which handles the core payment
@@ -293,6 +295,7 @@ func newChainControlFromConfig(cfg *config, chanDB *channeldb.DB) (*chainControl
 		fmt.Printf("unable to start wallet: %v\n", err)
 		return nil, nil, err
 	}
+	prox.SetWallet(wallet)
 
 	ltndLog.Info("LightningWallet opened")
 
diff --git a/lnwallet/btcwallet/signer.go b/lnwallet/btcwallet/signer.go
index 3b14321..6709e0a 100644
--- a/lnwallet/btcwallet/signer.go
+++ b/lnwallet/btcwallet/signer.go
@@ -255,7 +255,7 @@ func serializetx(tx *wire.MsgTx, signDesc *lnwallet.SignDescriptor) ([]byte) {
 //
 // This is a part of the WalletController interface.
 func (b *BtcWallet) ComputeInputScript(tx *wire.MsgTx,
-	signDesc *lnwallet.SignDescriptor) (*lnwallet.InputScript, error) {
+	signDesc *lnwallet.SignDescriptor, remote *btcec.PublicKey) (*lnwallet.InputScript, error) {
 	bajts := serializetx(tx, signDesc)
 	fmt.Printf("SERIALIZED TX AND SIGNDESC %v\n", bajts)
 
diff --git a/lnwallet/interface.go b/lnwallet/interface.go
index 5dbc4d5..a72532b 100644
--- a/lnwallet/interface.go
+++ b/lnwallet/interface.go
@@ -306,7 +306,7 @@ type Signer interface {
 	// NOTE: This method will ignore any tweak parameters set within the
 	// passed SignDescriptor as it assumes a set of typical script
 	// templates (p2wkh, np2wkh, etc).
-	ComputeInputScript(tx *wire.MsgTx, signDesc *SignDescriptor) (*InputScript, error)
+	ComputeInputScript(tx *wire.MsgTx, signDesc *SignDescriptor, remote *btcec.PublicKey) (*InputScript, error)
 }
 
 // MessageSigner represents an abstract object capable of signing arbitrary
diff --git a/lnwallet/wallet.go b/lnwallet/wallet.go
index 7629eac..38fea60 100644
--- a/lnwallet/wallet.go
+++ b/lnwallet/wallet.go
@@ -788,7 +788,7 @@ func (l *LightningWallet) handleContributionMsg(req *addContributionMsg) {
 		signDesc.InputIndex = i
 
 		inputScript, err := l.Cfg.Signer.ComputeInputScript(fundingTx,
-			&signDesc)
+			&signDesc, pendingReservation.partialState.IdentityPub)
 		if err != nil {
 			req.err <- err
 			return
